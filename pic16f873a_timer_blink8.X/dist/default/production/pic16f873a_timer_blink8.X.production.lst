

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Sep 25 00:42:01 2022

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F873A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  010E                     	;# 
    69  010F                     	;# 
    70  018C                     	;# 
    71  018D                     	;# 
    72  000B                     _INTCONbits	set	11
    73  0005                     _PORTA	set	5
    74  0007                     _PORTC	set	7
    75  0001                     _TMR0	set	1
    76  009C                     _CMCON	set	156
    77  0081                     _OPTION_REG	set	129
    78  0085                     _TRISA	set	133
    79                           
    80                           ; #config settings
    81  0000                     
    82                           	psect	cinit
    83  0013                     start_initialization:	
    84  0013                     __initialization:	
    85                           
    86                           ; Clear objects allocated to BANK0
    87  0013  01A6               	clrf	__pbssBANK0& (0+127)
    88  0014  01A7               	clrf	(__pbssBANK0+1)& (0+127)
    89  0015                     end_of_initialization:	
    90                           ;End of C runtime variable initialization code
    91                           
    92  0015                     __end_of__initialization:	
    93  0015  0183               	clrf	3
    94  0016  118A  285D         	ljmp	_main	;jump to C main() function
    95                           
    96                           	psect	bssBANK0
    97  0026                     __pbssBANK0:	
    98  0026                     _counter:	
    99  0026                     	ds	2
   100                           
   101                           	psect	cstackCOMMON
   102  0000                     __pcstackCOMMON:	
   103  0000                     ??_initialize:	
   104  0000                     ??_interrupt_init:	
   105                           ; 1 bytes @ 0x0
   106                           
   107  0000                     ??_main:	
   108                           ; 1 bytes @ 0x0
   109                           
   110                           
   111                           	psect	cstackBANK0
   112  0020                     __pcstackBANK0:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0020                     ?_blink_next_led:	
   116  0020                     ?_initialize:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  0020                     ?_interrupt_init:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  0020                     ?_toggle_ISR:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0020                     ?_main:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0020                     ?i1_blink_next_led:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0020                     ??i1_blink_next_led:	
   132                           ; 1 bytes @ 0x0
   133                           
   134                           
   135                           ; 1 bytes @ 0x0
   136  0020                     	ds	1
   137  0021                     ??_toggle_ISR:	
   138                           
   139                           ; 1 bytes @ 0x1
   140  0021                     	ds	4
   141  0025                     ??_blink_next_led:	
   142                           
   143                           ; 1 bytes @ 0x5
   144  0025                     	ds	1
   145                           
   146                           	psect	maintext
   147  005D                     __pmaintext:	
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 39 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, pclath, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : B00/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMMON   BANK0   BANK1
   167 ;;      Params:         0       0       0
   168 ;;      Locals:         0       0       0
   169 ;;      Temps:          0       0       0
   170 ;;      Totals:         0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called:    3
   173 ;; This function calls:
   174 ;;		_blink_next_led
   175 ;;		_initialize
   176 ;;		_interrupt_init
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _main
   184  005D                     _main:	
   185                           
   186                           ;main.c: 41: initialize();
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   190  005D  118A  2067  118A   	fcall	_initialize
   191                           
   192                           ;main.c: 42: interrupt_init();
   193  0060  118A  2052  118A   	fcall	_interrupt_init
   194  0063                     l31:	
   195                           ;main.c: 44: do {
   196                           
   197                           
   198                           ;main.c: 45: blink_next_led();
   199  0063  118A  203A  118A   	fcall	_blink_next_led
   200                           
   201                           ;main.c: 46: } while(1);
   202  0066  2863               	goto	l31
   203  0067                     __end_of_main:	
   204                           
   205                           	psect	text1
   206  0052                     __ptext1:	
   207 ;; *************** function _interrupt_init *****************
   208 ;; Defined at:
   209 ;;		line 63 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, status,2
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMMON   BANK0   BANK1
   223 ;;      Params:         0       0       0
   224 ;;      Locals:         0       0       0
   225 ;;      Temps:          0       0       0
   226 ;;      Totals:         0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels used:    1
   229 ;; Hardware stack levels required when called:    2
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		_main
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _interrupt_init
   239  0052                     _interrupt_init:	
   240                           
   241                           ;main.c: 64: OPTION_REG = 0x86;
   242                           
   243                           ;incstack = 0
   244                           ; Regs used in _interrupt_init: [wreg+status,2]
   245  0052  3086               	movlw	134
   246  0053  1683               	bsf	3,5	;RP0=1, select bank1
   247  0054  1303               	bcf	3,6	;RP1=0, select bank1
   248  0055  0081               	movwf	1	;volatile
   249                           
   250                           ;main.c: 72: INTCONbits.GIE = 0x01;
   251  0056  178B               	bsf	11,7	;volatile
   252                           
   253                           ;main.c: 73: INTCONbits.PEIE = 0x01;
   254  0057  170B               	bsf	11,6	;volatile
   255                           
   256                           ;main.c: 74: INTCONbits.T0IE = 0x01;
   257  0058  168B               	bsf	11,5	;volatile
   258                           
   259                           ;main.c: 75: TMR0 = 0x00;
   260  0059  1283               	bcf	3,5	;RP0=0, select bank0
   261  005A  1303               	bcf	3,6	;RP1=0, select bank0
   262  005B  0181               	clrf	1	;volatile
   263  005C  0008               	return
   264  005D                     __end_of_interrupt_init:	
   265                           
   266                           	psect	text2
   267  0067                     __ptext2:	
   268 ;; *************** function _initialize *****************
   269 ;; Defined at:
   270 ;;		line 49 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1
   284 ;;      Params:         0       0       0
   285 ;;      Locals:         0       0       0
   286 ;;      Temps:          0       0       0
   287 ;;      Totals:         0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels used:    1
   290 ;; Hardware stack levels required when called:    2
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_main
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           
   299                           ;psect for function _initialize
   300  0067                     _initialize:	
   301                           
   302                           ;main.c: 50: CMCON = 0x07;
   303                           
   304                           ;incstack = 0
   305                           ; Regs used in _initialize: [wreg+status,2]
   306  0067  3007               	movlw	7
   307  0068  1683               	bsf	3,5	;RP0=1, select bank1
   308  0069  1303               	bcf	3,6	;RP1=0, select bank1
   309  006A  009C               	movwf	28	;volatile
   310                           
   311                           ;main.c: 51: TRISA = 0x00;
   312  006B  0185               	clrf	5	;volatile
   313                           
   314                           ;main.c: 52: PORTA = 0x00;
   315  006C  1283               	bcf	3,5	;RP0=0, select bank0
   316  006D  1303               	bcf	3,6	;RP1=0, select bank0
   317  006E  0185               	clrf	5	;volatile
   318  006F  0008               	return
   319  0070                     __end_of_initialize:	
   320                           
   321                           	psect	text3
   322  003A                     __ptext3:	
   323 ;; *************** function _blink_next_led *****************
   324 ;; Defined at:
   325 ;;		line 55 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1
   339 ;;      Params:         0       0       0
   340 ;;      Locals:         0       0       0
   341 ;;      Temps:          0       1       0
   342 ;;      Totals:         0       1       0
   343 ;;Total ram usage:        1 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; Hardware stack levels required when called:    2
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           
   354                           ;psect for function _blink_next_led
   355  003A                     _blink_next_led:	
   356                           
   357                           ;main.c: 56: PORTC = (PORTC << 1);
   358                           
   359                           ;incstack = 0
   360                           ; Regs used in _blink_next_led: [wreg+status,2+status,0]
   361  003A  1283               	bcf	3,5	;RP0=0, select bank0
   362  003B  1303               	bcf	3,6	;RP1=0, select bank0
   363  003C  0807               	movf	7,w	;volatile
   364  003D  00A5               	movwf	??_blink_next_led
   365  003E  0725               	addwf	??_blink_next_led,w
   366  003F  0087               	movwf	7	;volatile
   367                           
   368                           ;main.c: 57: if(!PORTC){
   369  0040  0807               	movf	7,w	;volatile
   370  0041  1D03               	btfss	3,2
   371  0042  0008               	return
   372                           
   373                           ;main.c: 59: PORTC = 1;
   374  0043  3001               	movlw	1
   375  0044  0087               	movwf	7	;volatile
   376  0045  0008               	return
   377  0046                     __end_of_blink_next_led:	
   378                           
   379                           	psect	text4
   380  0018                     __ptext4:	
   381 ;; *************** function _toggle_ISR *****************
   382 ;; Defined at:
   383 ;;		line 27 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1
   397 ;;      Params:         0       0       0
   398 ;;      Locals:         0       0       0
   399 ;;      Temps:          0       4       0
   400 ;;      Totals:         0       4       0
   401 ;;Total ram usage:        4 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    1
   404 ;; This function calls:
   405 ;;		i1_blink_next_led
   406 ;; This function is called by:
   407 ;;		Interrupt level 1
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _toggle_ISR
   413  0018                     _toggle_ISR:	
   414                           
   415                           ;main.c: 28: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
   416  0018  1A8B               	btfsc	11,5	;volatile
   417  0019  1D0B               	btfss	11,2	;volatile
   418  001A  282D               	goto	i1l28
   419                           
   420                           ;main.c: 29: if(counter == 16){
   421  001B  3010               	movlw	16
   422  001C  0626               	xorwf	_counter,w
   423  001D  0427               	iorwf	_counter+1,w
   424  001E  1D03               	btfss	3,2
   425  001F  2824               	goto	i1l573
   426                           
   427                           ;main.c: 30: blink_next_led();
   428  0020  118A  2046  118A   	fcall	i1_blink_next_led
   429                           
   430                           ;main.c: 31: }
   431  0023  282C               	goto	i1l575
   432  0024                     i1l573:	
   433                           
   434                           ;main.c: 32: else {
   435                           ;main.c: 33: counter++;
   436  0024  3001               	movlw	1
   437  0025  1283               	bcf	3,5	;RP0=0, select bank0
   438  0026  1303               	bcf	3,6	;RP1=0, select bank0
   439  0027  07A6               	addwf	_counter,f
   440  0028  1803               	skipnc
   441  0029  0AA7               	incf	_counter+1,f
   442  002A  3000               	movlw	0
   443  002B  07A7               	addwf	_counter+1,f
   444  002C                     i1l575:	
   445                           
   446                           ;main.c: 34: }
   447                           ;main.c: 35: INTCONbits.TMR0IF = 0x00;
   448  002C  110B               	bcf	11,2	;volatile
   449  002D                     i1l28:	
   450  002D  1283               	bcf	3,5	;RP0=0, select bank0
   451  002E  1303               	bcf	3,6	;RP1=0, select bank0
   452  002F  0824               	movf	??_toggle_ISR+3,w
   453  0030  00FF               	movwf	127
   454  0031  0823               	movf	??_toggle_ISR+2,w
   455  0032  008A               	movwf	10
   456  0033  0822               	movf	??_toggle_ISR+1,w
   457  0034  0084               	movwf	4
   458  0035  0E21               	swapf	??_toggle_ISR^0,w
   459  0036  0083               	movwf	3
   460  0037  0EFE               	swapf	126,f
   461  0038  0E7E               	swapf	126,w
   462  0039  0009               	retfie
   463  003A                     __end_of_toggle_ISR:	
   464                           
   465                           	psect	intentry
   466  0004                     __pintentry:	
   467                           ;incstack = 0
   468                           ; Regs used in _toggle_ISR: [wreg+status,2+status,0+pclath+cstack]
   469                           
   470  0004                     interrupt_function:	
   471  007E                     saved_w	set	btemp
   472  0004  00FE               	movwf	btemp
   473  0005  0E03               	swapf	3,w
   474  0006  1283               	bcf	3,5	;RP0=0, select bank0
   475  0007  1303               	bcf	3,6	;RP1=0, select bank0
   476  0008  00A1               	movwf	??_toggle_ISR
   477  0009  0804               	movf	4,w
   478  000A  00A2               	movwf	??_toggle_ISR+1
   479  000B  080A               	movf	10,w
   480  000C  00A3               	movwf	??_toggle_ISR+2
   481  000D  087F               	movf	btemp+1,w
   482  000E  00A4               	movwf	??_toggle_ISR+3
   483  000F  118A  2818         	ljmp	_toggle_ISR
   484                           
   485                           	psect	text5
   486  0046                     __ptext5:	
   487 ;; *************** function i1_blink_next_led *****************
   488 ;; Defined at:
   489 ;;		line 55 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1
   503 ;;      Params:         0       0       0
   504 ;;      Locals:         0       0       0
   505 ;;      Temps:          0       1       0
   506 ;;      Totals:         0       1       0
   507 ;;Total ram usage:        1 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_toggle_ISR
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function i1_blink_next_led
   518  0046                     i1_blink_next_led:	
   519                           
   520                           ;main.c: 56: PORTC = (PORTC << 1);
   521                           
   522                           ;incstack = 0
   523                           ; Regs used in i1_blink_next_led: [wreg+status,2+status,0]
   524  0046  1283               	bcf	3,5	;RP0=0, select bank0
   525  0047  1303               	bcf	3,6	;RP1=0, select bank0
   526  0048  0807               	movf	7,w	;volatile
   527  0049  00A0               	movwf	??i1_blink_next_led
   528  004A  0720               	addwf	??i1_blink_next_led,w
   529  004B  0087               	movwf	7	;volatile
   530                           
   531                           ;main.c: 57: if(!PORTC){
   532  004C  0807               	movf	7,w	;volatile
   533  004D  1D03               	btfss	3,2
   534  004E  0008               	return
   535                           
   536                           ;main.c: 59: PORTC = 1;
   537  004F  3001               	movlw	1
   538  0050  0087               	movwf	7	;volatile
   539  0051  0008               	return
   540  0052                     __end_ofi1_blink_next_led:	
   541  007E                     btemp	set	126	;btemp
   542  007E                     wtemp	set	126
   543  007E                     wtemp0	set	126
   544  0080                     wtemp1	set	128
   545  0082                     wtemp2	set	130
   546  0084                     wtemp3	set	132
   547  0086                     wtemp4	set	134
   548  0088                     wtemp5	set	136
   549  007F                     wtemp6	set	127
   550  007E                     ttemp	set	126
   551  007E                     ttemp0	set	126
   552  0081                     ttemp1	set	129
   553  0084                     ttemp2	set	132
   554  0087                     ttemp3	set	135
   555  007F                     ttemp4	set	127
   556  007E                     ltemp	set	126
   557  007E                     ltemp0	set	126
   558  0082                     ltemp1	set	130
   559  0086                     ltemp2	set	134
   560  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      6       8
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _toggle_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_blink_next_led

Critical Paths under _toggle_ISR in BANK0

    _toggle_ISR->i1_blink_next_led

Critical Paths under _main in BANK1

    None.

Critical Paths under _toggle_ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _blink_next_led
                         _initialize
                     _interrupt_init
 ---------------------------------------------------------------------------------
 (1) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink_next_led                                       1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _toggle_ISR                                           4     4      0       0
                                              1 BANK0      4     4      0
                   i1_blink_next_led
 ---------------------------------------------------------------------------------
 (3) i1_blink_next_led                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink_next_led
   _initialize
   _interrupt_init

 _toggle_ISR (ROOT)
   i1_blink_next_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      6       8       4        8.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       8       7        0.0%
DATA                 0      0       8       8        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Sep 25 00:42:01 2022

              __CFG_CP$OFF 0000                         l31 0063     __end_of_interrupt_init 005D  
             __CFG_CPD$OFF 0000                        fsr0 0004   __end_ofi1_blink_next_led 0052  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       i1l28 002D  
                     _TMR0 0001               __CFG_WRT$OFF 0000                       _main 005D  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0011                       ttemp 007E                       wtemp 007E  
                    ?_main 0020              __CFG_WDTE$OFF 0000                      _CMCON 009C  
          ?_interrupt_init 0020                      i1l573 0024                      i1l575 002C  
                    _PORTA 0005                      _PORTC 0007                      _TRISA 0085  
            __CFG_PWRTE$ON 0000                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __initialization 0013               __end_of_main 0067  
                   ??_main 0000                     saved_w 007E    __end_of__initialization 0015  
           __pcstackCOMMON 0000          ?i1_blink_next_led 0020    __size_of_blink_next_led 000C  
       ??i1_blink_next_led 0020                 __pbssBANK0 0026                 __pmaintext 005D  
         ??_interrupt_init 0000                 __pintentry 0004                 _initialize 0067  
                  __ptext1 0052                    __ptext2 0067                    __ptext3 003A  
                  __ptext4 0018                    __ptext5 0046                    _counter 0026  
     end_of_initialization 0015                 _toggle_ISR 0018             _blink_next_led 003A  
              ?_initialize 0020     __end_of_blink_next_led 0046        start_initialization 0013  
__size_ofi1_blink_next_led 000C            ?_blink_next_led 0020                ?_toggle_ISR 0020  
                ___latbits 0001              __pcstackBANK0 0020        __size_of_initialize 0009  
        interrupt_function 0004        __size_of_toggle_ISR 0022    __size_of_interrupt_init 000B  
         i1_blink_next_led 0046               ??_initialize 0000              __size_of_main 000A  
       __end_of_initialize 0070           ??_blink_next_led 0025               ??_toggle_ISR 0021  
               _INTCONbits 000B                   intlevel1 0000         __end_of_toggle_ISR 003A  
               _OPTION_REG 0081             _interrupt_init 0052  
