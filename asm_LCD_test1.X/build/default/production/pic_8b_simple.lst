MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;===============================================================================
                      00002 ; Program to exercise 4-bit PIC-to-LCD interface (a display driven by
                      00003 ; Hitachi HDD44780 controller is assumed.
                      00004 ;
                      00005 ; Code also assumes a 4 MHz clock. Delay routines must editted for faster 
                      00006 ; clock.
                      00007 ;
                      00008 ;    
                      00009 ;===============================================================================
                      00010 ; config bits 
                      00011 #include "p16f887.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F887 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00810         LIST
                      00012 
                      00013 ; __config 0xE0D5
2007   20D5           00014  __CONFIG _CONFIG1, _FOSC_INTRC_CLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOR
                            EN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
                      00015 
                      00016 ; __config 0xFEFF
2008   3EFF           00017  __CONFIG _CONFIG2, _BOR4V_BOR21V & _WRT_OFF    
                      00018 ;===============================================================================    
                      00019 ; reserve 16 bytes for string buffer 
Warning[205]: Found directive in column 1. (CBLOCK)
                      00020 CBLOCK      H'20'
  00000020            00021     strData      ; addr from H'21' till H'30'
Warning[205]: Found directive in column 1. (ENDC)
                      00022 ENDC
                      00023 
Warning[205]: Found directive in column 1. (CBLOCK)
                      00024 CBLOCK      H'31'
  00000031            00025     count1
  00000032            00026     count2
  00000033            00027     count3
  00000034            00028     pic_addr    ; storage for start of text area
                      00029                 ; labeled strData in PIC RAM
  00000035            00030     index       ; index into text table also used for 
  00000036            00031     store1      ; auxiliary store, local temp store
  00000037            00032     store2      ; temp store # 2
Warning[205]: Found directive in column 1. (ENDC)
                      00033 ENDC
                      00034     
                      00035 ; LCD related constants     
  00000001            00036 EN   EQU    RA1
  00000002            00037 RS   EQU    RA2   
  00000003            00038 RW   EQU    RA3
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000080            00039 LN_1 EQU    H'80'
  000000C0            00040 LN_2 EQU    H'C0' 
                      00041  
                      00042 ;===============================================================================
                      00043 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00044     GOTO    START                   ; go to beginning of program
                      00045 ;===============================================================================
                      00046 ; add interrupts here if used
                      00047     ORG     H'0004'
0004   0009           00048     RETFIE
                      00049 ;===============================================================================    
                      00050 MAIN_PROG CODE                      ; let linker place main program
                      00051 
0000                  00052 START
0000   1683           00053     BSF     STATUS, RP0            ; select bank 1  
0001   3000           00054     MOVLW   H'00'                  ; load W with zero to 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   0085           00055     MOVWF   TRISA                  ;   set port A pins as output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0086           00056     MOVWF   TRISB                  ;   set port B pins as output
                      00057 ;------------------------------------------------------------    
0004   1283           00058     BCF     STATUS, RP0            ; select bank 0  
0005   3000           00059     MOVLW   H'00'                  ; load W with zero to 
0006   0085           00060     MOVWF   PORTA                  ;  clear port A
0007   0086           00061     MOVWF   PORTB                  ;  clear port B
                      00062 ;------------------------------------------------------------        
0008   1703           00063     BSF     STATUS, RP1            ; 
0009   1283           00064     BCF     STATUS, RP0            ; select bank 2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   1387           00065     BCF     CM1CON0, C1ON          ; turn off comparator 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   1388           00066     BCF     CM2CON0, C2ON          ; turn off comparator 2
                      00067 ;--------------------------------------------------------------
000C   1683           00068     BSF     STATUS,RP0             ; select bank 3
000D   3000           00069     MOVLW   H'00'                  ; load W with zero to 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0089           00070     MOVWF   ANSELH                 ; all ports as digital output
                      00071 ;--------------------------------------------------------------
                      00072                                     ; wait and initiliaze HD447801
000F   2???           00073     CALL    Delay_5                ; allow LCD time to start
0010   2???           00074     CALL    Delay_5
0011   2???           00075     CALL    LCD_Init
0012   2???           00076     CALL    Delay_5                ; wait again
                      00077  ;--------------------------------------------------------------
0013   3020           00078     MOVLW   H'20'                  ; start address for buffer
0014   00B4           00079     MOVWF   pic_addr               ; to local variable
                      00080 
                      00081 ;===============================================================================
                      00082 ; FIRST LCD LINE
                      00083 ;===============================================================================    
                      00084 ; Store 16 blanks in PIC RAM, starting at address stored in pic_addr
0015   2???           00085     CALL    Blank_16
                      00086                                 ; call procedure to store ASCII chars 
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087                                 ; for message in text buffer
0016   3003           00088     MOVLW   D'3'                ; offset into buffer
0017   2???           00089     CALL    MSU_Store
                      00090                                 ; set DDRAM address to start of first ilne
0018   2???           00091     CALL    Line_1
                      00092                                 ; call procedure to display 16 characters in LCD    
0019   2???           00093     CALL    Display_16
                      00094 
                      00095 ;===============================================================================
                      00096 ; SECOND LCD LINE
                      00097 ;===============================================================================
001A   2???           00098     CALL    Delay_5             ; wait for termination
001B   2???           00099     CALL    Blank_16            ; blank buffer
                      00100                                 ; call procedure to store ASCII chars 
                      00101                                 ; for message in text buffer
001C   3001           00102     MOVLW   D'1'                ; offset into buffer
001D   2???           00103     CALL    Univ_Store
001E   2???           00104     CALL    Line_2              ; DDRAM addres of LCD line 2
001F   2???           00105     CALL    Display_16
                      00106     
                      00107 ;===============================================================================    
                      00108 ; Done~!    
                      00109 ;===============================================================================
0020                  00110 Loop:
0020   2???           00111     goto    Loop
                      00112     
                      00113 ;===============================================================================
                      00114 ; Subroutines    
                      00115 ;===============================================================================
0021                  00116 LCD_Init:
0021   1085           00117     BCF     PORTA, EN           ; enable line low
0022   1105           00118     BCF     PORTA, RS           ; RS line low
0023   1185           00119     BCF     PORTA, RW           ; write mode
0024   2???           00120     CALL    Delay_125           ; wait 125 us
                      00121 ;-------------------------------------------------------------------------------
                      00122     ; function set - 0 0 1 0 1 0 0 0 -> bit5: function set command 
                      00123     ;                                   bit4: interface width, 0: 4 bits, 1: 8 b
                      00124     ;                                   bit3: duty cycle select, 0: 1/8 or 1/11
                      00125     ;                                           1: 1/16
                      00126     ;                                   bit2: font select, 1 = 5x10 in 1/8 1/11
                      00127     ;                                                       0 = 1/16 dc
0025   2???           00128     CALL    Send_8              ; four bit send routine
                      00129     ; set 4-bit mode command must be repeated
0026   3028           00130     MOVLW   H'28'
0027   2???           00131     CALL    Send_8
                      00132     ; display, cursor on -> 0 0 0 0 1 1 1 0 -> bit0: blink char 
                      00133     ;                                   bit1: cursor on/off
                      00134     ;                                   bit2: display on/off
                      00135     ;                                           1: 1/16
                      00136     ;                                   bit2: command bit
0028   300E           00137     MOVLW   H'0E'
0029   2???           00138     CALL    Send_8
                      00139     ; set entry mode -> 0 0 0 0 0 1 1 0 -> bit0: display shift 
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00140     ;                                   bit1: increment mode, 1= L-to-R
                      00141     ;                                   bit2: command bit
002A   3006           00142     MOVLW   H'06'
002B   2???           00143     CALL    Send_8
                      00144     ; cursor display shift -> 0 0 0 1 0 1 0 0 ->  
                      00145     ;                               bit2, bit3: 00 - cursor shift left
                      00146     ;                                       01 - cursor shift right
                      00147     ;                                       10 - cursor, display shifted left
                      00148     ;                                       11 - cursor, display shifted right                          
                                        
002C   3014           00149     MOVLW   H'14'
002D   2???           00150     CALL    Send_8
                      00151     ; clear display > 0 0 0 0 0 0 0 1 ->  
                      00152     ;                               bit0: command bit
002E   3001           00153     MOVLW   H'01'
002F   2???           00154     CALL    Send_8
                      00155     
0030   2???           00156     CALL    Delay_5                 ; test for busy
0031   0008           00157     RETURN
                      00158 ;-------------------------------------------------------------------------------    
0032                  00159 Delay_125:
                      00160     ; procedure to delay 42 us
0032   302A           00161     MOVLW   D'42'                   ; repeat 42 machine cycles
0033   00B1           00162     MOVWF   count1
0034   0BB1           00163 D1: DECFSZ  count1, F
0035   2???           00164     GOTO    D1
0036   0008           00165     RETURN
                      00166 ;-------------------------------------------------------------------------------
0037                  00167 Delay_5:        
                      00168     ; procedure to delay 5 ms
0037   3029           00169     MOVLW   D'41'                   ; repeat 42 machine cycles
0038   00B2           00170     MOVWF   count2
0039   2???           00171 D2: CALL    Delay_125               ; wait
003A   0BB2           00172     DECFSZ  count2, F               ; 40 times = 5 milliseconds
003B   2???           00173     GOTO    D2
003C   0008           00174     RETURN
                      00175 
                      00176 ;-------------------------------------------------------------------------------    
003D                  00177 Pulse_EN:
003D   1485           00178     BSF     PORTA, EN
003E   0000           00179     NOP
003F   1085           00180     BCF     PORTA, EN
0040   0008           00181     RETURN
                      00182 ;-------------------------------------------------------------------------------
0041                  00183 Display_16:
0041   2???           00184     CALL    Delay_5             ; make sure it is not busy
0042   1085           00185     BCF     PORTA, EN           ; set up for data
0043   3010           00186     MOVLW   D'16'               ; counter for 16 characters
0044   00B3           00187     MOVWF   count3
                      00188     ; get display address from local variable pic_ad
0045   0834           00189     MOVF    pic_addr, W         ; first display RAM address to W
0046   0084           00190     MOVWF   FSR                 ; W value to File Sekect Register
                      00191     
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0047                  00192 GetChar:
0047   0800           00193     MOVF    INDF, W             ; get character from display RAM
                      00194                                 ; locaotion pointed to by file select reg
0048   2???           00195     CALL    Send_8              ; 4-bit interface routine
                      00196     ; test for sixteen characters displayed
0049   0BB3           00197     DECFSZ  count3, F           ; decrement counter
004A   2???           00198     GOTO    NextChar            ; skip this line when done
004B   0008           00199     RETURN
                      00200     
004C                  00201 NextChar:    
004C   0A84           00202     INCF    FSR, F              ; bump pointer
004D   2???           00203     GOTO    GetChar
                      00204 ;-------------------------------------------------------------------------------
004E                  00205 Send_8:
                      00206     ; send two nibbles in 4 bit mode
                      00207     ; 7, 6, 5, and 4 (high-order nibble) is sent frist 
004E   00B6           00208     MOVWF   store1              ; save original value
004F   2???           00209     CALL    Merge_4             ; merge with port B
0050   0086           00210     MOVWF   PORTB               ; W to port B
0051   2???           00211     CALL    Pulse_EN            ; send data to LCD
                      00212     ; high nibble has been set at this point
0052   0836           00213     MOVF    store1, W           ; recover byte into W
0053   0E36           00214     SWAPF   store1, W           ; swap nibbles in W
0054   2???           00215     CALL    Merge_4
0055   0086           00216     MOVWF   PORTB
0056   2???           00217     CALL    Pulse_EN            ; send data to LCD
0057   2???           00218     CALL    Delay_125
0058   0008           00219     RETURN
                      00220 ;-------------------------------------------------------------------------------
                      00221     ; merge bits - the 4 high order bits of the value to be sent
                      00222     ; with the contents of portB so as to preserve the 4 low-bits in PORTB
                      00223     ; Logic: AND value with 1111 0000 mask
                      00224     ; Now low nibble in value and high nibble in portB are all 0 bits
                      00225     ;    value = vvvv 0000
                      00226     ;    portB = 0000 bbbb
                      00227     ; OR value and portB resulting in:
                      00228     ;    value OR portB = vvvv bbbb
0059                  00229 Merge_4:                        ; ANDing with 1 preserves the original value
0059   39F0           00230     ANDLW       H'F0'           ; ANDing with 0 clears the bit
005A   00B7           00231     MOVWF       store2          ; save result in variable
005B   0806           00232     MOVF        PORTB, W        ; copy portB value into W reg
005C   390F           00233     ANDLW       H'0F'           ; now clear high nibble in portb
                      00234                                 ; and preserve low nibble in it
005D   0437           00235     IORWF       store2, W       ; OR two operands and store result in W reg
005E   0008           00236     RETURN
                      00237         
                      00238 ;-------------------------------------------------------------------------------        
005F                  00239 Blank_16:       
005F   3010           00240     MOVLW       D'16'
0060   00B1           00241     MOVWF       count1          ; set up counter
0061   0834           00242     MOVF        pic_addr, W     ; first PIC RAM address
0062   0084           00243     MOVWF       FSR             ; indexed addressing
0063   3020           00244     MOVLW       H'20'           ; ASCII space character
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0064                  00245 StoreIt:
0064   0080           00246     MOVWF       INDF            ; store blank char in PIC RAM
                      00247                                 ; buffer using File Select Register
0065   0BB1           00248     DECFSZ      count1, F       ; Done?
0066   2???           00249     GOTO        incFSR          ; no
0067   0008           00250     RETURN                      ; yes
0068                  00251 incFSR:
0068   0A84           00252     INCF        FSR, F          ; bump FSR to next buffer space
0069   2???           00253     GOTO        StoreIt
                      00254 ;-----------------------------------;-------------------------------------------    
                      00255 ; Set address register to LCD line2 |
                      00256 ;-----------------------------------;
006A                  00257 Line_1:
006A   1085           00258     BCF         PORTA, EN       ; enable line low
006B   1105           00259     BCF         PORTA, RS       ; RS line low, set up for control
006C   2???           00260     CALL        Delay_5         ; is it busy?
                      00261     ; set to second display line
006D   3080           00262     MOVLW       LN_1            ; address and command bit
006E   2???           00263     CALL        Send_8          ; 4-bit routine call
                      00264    
006F   1505           00265     BSF         PORTA, RS       ; set up RS line for data
0070   2???           00266     CALL        Delay_5         ; busy?
0071   0008           00267     RETURN
                      00268     
                      00269 ;-----------------------------------;
                      00270 ; Set address register to LCD line2 |
                      00271 ;-----------------------------------;
0072                  00272 Line_2:
0072   1085           00273     BCF         PORTA, EN       ; enable line low
0073   1105           00274     BCF         PORTA, RS       ; RS line low, set up for control
0074   2???           00275     CALL        Delay_5         ; is it busy?
                      00276     ; set to second display line
0075   30C0           00277     MOVLW       LN_2            ; address and command bit
0076   2???           00278     CALL        Send_8          ; 4-bit routine call
                      00279   
0077   1505           00280     BSF         PORTA, RS       ; set up RS line for data
0078   2???           00281     CALL        Delay_5         ; busy?
0079   0008           00282     RETURN
                      00283   
                      00284 ;-------------------------------------------------------------------------------
                      00285 ; first text string procedure ;
                      00286 ;-----------------------------;    
007A                  00287 MSU_Store:
                      00288     ; it stores in PIC RAM buffer the message contained in the
                      00289     ; code area labeled msg1
                      00290     ;
                      00291     ; ON ENTRY:
                      00292     ;   pic_addr holds address of text buffer
                      00293     ;   W register holds offset into storage area
                      00294     ;   msg1 is routine that returns the string characters
                      00295     ;   andiy a zero terminator
                      00296     ;   index is local variable that holds offset into text table
                      00297     ;   This var is also for temporary storage of offset into buffer
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00298     ;
                      00299     ; ON EXIT:
                      00300     ;   text message stored in buffer
007A   00B5           00301     MOVWF   index
007B   0834           00302     MOVF    pic_addr, W     ; first display RAM address to W
007C   0735           00303     ADDWF   index, W        ; add offset to address
007D   0084           00304     MOVWF   FSR             ; copy W value to File Select Register
                      00305     ; initialize index for text string access
007E   3000           00306     MOVLW   0               ; start at 0
007F   00B5           00307     MOVWF   index           ; store index in variable of the same name
                      00308     
0080                  00309 GetMsgChar:
0080   2???           00310     CALL    msg1            ; get a character from table
0081   3900           00311     ANDLW   0               ; TEST for zero terminator
0082   1903           00312     BTFSC   STATUS, Z
0083   2???           00313     GOTO    endStr1         ; end of string reached
                      00314     ; ASSERT: valid string character in W
                      00315     ;         store character in text buffer by FSR
0084   0080           00316     MOVWF   INDF            ; store in buffer by FSR
0085   0A84           00317     INCF    FSR, F          ; increment buffer pointer
                      00318     ; restore table character counter forom variable
0086   0835           00319     MOVF    index, W        ; copy value to W reg
0087   3E01           00320     ADDLW   1               ; bump to next character
0088   00B5           00321     MOVWF   index           ; store table index in varabiel
0089   2???           00322     GOTO    GetMsgChar      ; continue
                      00323     
008A                  00324 endStr1:
008A   0008           00325     RETURN
                      00326 ;-------------------------------------------------------------------------------
                      00327 ;  Routine for returning message stored in program area
                      00328 ;-------------------------------------------------------------------------------
008B                  00329 msg1:
008B   0782           00330     ADDWF   PCL, F          ; access table
008C   344D           00331     RETLW   'M'
008D   3469           00332     RETLW   'i'
008E   346E           00333     RETLW   'n'
008F   3465           00334     RETLW   'e'
0090   3473           00335     RETLW   's'
0091   346F           00336     RETLW   'o'
0092   3474           00337     RETLW   't'
0093   3461           00338     RETLW   'a'
0094   3400           00339     RETLW   0
                      00340     
                      00341 ;-------------------------;-----------------------------------------------------
                      00342 ; second string procedure ;
                      00343 ;-------------------------;
0095                  00344 Univ_Store:
                      00345     ; process identical to procedure MSU_Store
0095   00B5           00346     MOVWF   index           ; store W value in index variable
                      00347     ; store base address of text buffer in FSR
0096   0834           00348     MOVF    pic_addr, 0     ; first display RAM address to W
0097   0735           00349     ADDWF   index, 0        ; add offset to address
0098   0084           00350     MOVWF   FSR             ; copy W value to File Select Register
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00351     
                      00352     ; initialize index for text string access
0099   3000           00353     MOVLW   0               ; start at 0
009A   00B5           00354     MOVWF   index
                      00355     
009B                  00356 GetMsgChar2:
009B   2???           00357     CALL    msg2            ; get a character from table
009C   39FF           00358     ANDLW   H'0FF'          ; TEST for zero terminator
009D   1903           00359     BTFSC   STATUS, Z       ; Test for zero flag
009E   2???           00360     GOTO    endStr2         ; end of string reached
                      00361     ; ASSERT: valid string character in W
                      00362     ;         store character in text buffer by FSR
009F   0080           00363     MOVWF   INDF            ; store in buffer by FSR
00A0   0A84           00364     INCF    FSR, F          ; increment buffer pointer
                      00365     ; restore table character counter forom variable
00A1   0835           00366     MOVF    index, W        ; copy value to W reg
00A2   3E01           00367     ADDLW   1               ; bump to next character
00A3   00B5           00368     MOVWF   index           ; store table index in varabiel
00A4   2???           00369     GOTO    GetMsgChar2     ; continue
                      00370     
00A5                  00371 endStr2:
00A5   0008           00372     RETURN
                      00373     
                      00374 ;-------------------------------------------------------------------------------
                      00375 ;  Routine for returning message stored in program area
                      00376 ;-------------------------------------------------------------------------------
00A6                  00377 msg2:
00A6   0782           00378     ADDWF   PCL, F          ; access table
00A7   3453           00379     RETLW   'S'
00A8   3474           00380     RETLW   't'
00A9   3461           00381     RETLW   'a'
00AA   3474           00382     RETLW   't'
00AB   3465           00383     RETLW   'e'
00AC   3420           00384     RETLW   H'20'           ; ASCII for space
00AD   344D           00385     RETLW   'M'
00AE   3461           00386     RETLW   'a'
00AF   346E           00387     RETLW   'n'
00B0   346B           00388     RETLW   'k'
00B1   3461           00389     RETLW   'a'
00B2   3474           00390     RETLW   't'
00B3   346F           00391     RETLW   'o'
00B4   3400           00392     RETLW   0    
                      00393 ;===============================================================================    
20D5 3EFF             00394     END
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

BRGH                              00000002
Blank_16                          0000005F
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CSRC                              00000007
D                                 00000005
D1                                00000034
D2                                00000039
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
D_NOT_A                           00000005
Delay_125                         00000032
Delay_5                           00000037
Display_16                        00000041
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EN                                00000001
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GetChar                           00000047
GetMsgChar                        00000080
GetMsgChar2                       0000009B
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
LCD_Init                          00000021
LN_1                              00000080
LN_2                              000000C0
LTS                               00000001
Line_1                            0000006A
Line_2                            00000072
Loop                              00000020
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MSU_Store                         0000007A
Merge_4                           00000059
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WRITE                         00000002
NextChar                          0000004C
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
Pulse_EN                          0000003D
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                00000002
RSEN                              00000001
RW                                00000003
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000000
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
Send_8                            0000004E
StoreIt                           00000064
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
Univ_Store                        00000095
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-18-2022  1:13:13         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
count1                            00000031
count2                            00000032
count3                            00000033
endStr1                           0000008A
endStr2                           000000A5
incFSR                            00000068
index                             00000035
msg1                              0000008B
msg2                              000000A6
pic_addr                          00000034
store1                            00000036
store2                            00000037
strData                           00000020

Errors   :     0
Warnings :     4 reported,     0 suppressed
Messages :     5 reported,     0 suppressed

