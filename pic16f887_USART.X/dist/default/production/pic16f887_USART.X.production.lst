

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Oct 19 02:00:17 2022

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	functab,global,reloc=256,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  008F                     	;# 
    67  0090                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0093                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0105                     	;# 
    86  0107                     	;# 
    87  0108                     	;# 
    88  0109                     	;# 
    89  010C                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0185                     	;# 
    95  0187                     	;# 
    96  0188                     	;# 
    97  0189                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100                           
   101                           	psect	idataCOMMON
   102  021A                     __pidataCOMMON:	
   103                           
   104                           ;initializer for _ledControl
   105  021A  3431               	retlw	49
   106  021B  3404               	retlw	low (fp__toggleGreenLed-i1fpbase)
   107  021C  3432               	retlw	50
   108  021D  3401               	retlw	low (fp__toggleRedLed-i1fpbase)
   109  000B                     _INTCONbits	set	11
   110  0006                     _PORTBbits	set	6
   111  0008                     _PORTDbits	set	8
   112  001A                     _RCREG	set	26
   113  0018                     _RCSTA	set	24
   114  0065                     _RCIF	set	101
   115  008C                     _PIE1bits	set	140
   116  0099                     _SPBRG	set	153
   117  0086                     _TRISB	set	134
   118  0088                     _TRISD	set	136
   119  0098                     _TXSTA	set	152
   120  0188                     _ANSEL	set	392
   121  0189                     _ANSELH	set	393
   122                           
   123                           ; #config settings
   124  0000                     
   125                           	psect	cinit
   126  0015                     start_initialization:	
   127  0015                     __initialization:	
   128                           
   129                           ; Clear objects allocated to COMMON
   130  0015  01FA               	clrf	__pbssCOMMON& (0+127)
   131                           
   132                           ; Initialize objects allocated to COMMON
   133  0016  120A  118A  221A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   134  001B  00F6               	movwf	__pdataCOMMON& (0+127)
   135  001C  120A  118A  221B  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   136  0021  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   137  0022  120A  118A  221C  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   138  0027  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   139  0028  120A  118A  221D   	fcall	__pidataCOMMON+3	;fetch initializer
   140  002B  00F9               	movwf	(__pdataCOMMON+3)& (0+127)
   141  002C                     end_of_initialization:	
   142                           ;End of C runtime variable initialization code
   143                           
   144  002C                     __end_of__initialization:	
   145  002C  0183               	clrf	3
   146  002D  120A  118A  29AE   	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	bssCOMMON
   149  007A                     __pbssCOMMON:	
   150  007A                     _command:	
   151  007A                     	ds	1
   152                           
   153                           	psect	dataCOMMON
   154  0076                     __pdataCOMMON:	
   155  0076                     _ledControl:	
   156  0076                     	ds	4
   157                           
   158                           	psect	cstackCOMMON
   159  0070                     __pcstackCOMMON:	
   160  0070                     ?_toggleGreenLed:	
   161  0070                     ??_toggleGreenLed:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_toggleRedLed:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ??_toggleRedLed:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?_configUSART:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0070                     ?_enableInterrupt:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  0070                     ?_configPORTs:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0070                     ?_blinkLed:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  0070                     ?_USART_ISR:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0070                     ??_USART_ISR:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0070                     ?_main:	
   189                           ; 1 bytes @ 0x0
   190                           
   191                           
   192                           ; 1 bytes @ 0x0
   193  0070                     	ds	5
   194  0075                     USART_ISR@i:	
   195                           
   196                           ; 1 bytes @ 0x5
   197  0075                     	ds	1
   198                           
   199                           	psect	cstackBANK0
   200  0020                     __pcstackBANK0:	
   201  0020                     ??_configUSART:	
   202  0020                     ??_enableInterrupt:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0020                     ??_configPORTs:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0020                     ?_delay:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0020                     delay@time:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 4 bytes @ 0x0
   216  0020                     	ds	4
   217  0024                     ??_delay:	
   218                           
   219                           ; 1 bytes @ 0x4
   220  0024                     	ds	4
   221  0028                     delay@j:	
   222                           
   223                           ; 4 bytes @ 0x8
   224  0028                     	ds	4
   225  002C                     delay@k:	
   226                           
   227                           ; 4 bytes @ 0xC
   228  002C                     	ds	4
   229  0030                     ??_blinkLed:	
   230  0030                     ??_main:	
   231                           ; 1 bytes @ 0x10
   232                           
   233                           
   234                           	psect	maintext
   235  01AE                     __pmaintext:	
   236                           ; 1 bytes @ 0x10
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 69 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called:    4
   262 ;; This function calls:
   263 ;;		_blinkLed
   264 ;;		_configPORTs
   265 ;;		_configUSART
   266 ;;		_enableInterrupt
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           
   273                           ;psect for function _main
   274  01AE                     _main:	
   275                           
   276                           ;main.c: 71: configUSART();
   277                           
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280  01AE  120A  118A  2200  120A  118A  	fcall	_configUSART
   281                           
   282                           ;main.c: 72: enableInterrupt();
   283  01B3  120A  118A  2214  120A  118A  	fcall	_enableInterrupt
   284                           
   285                           ;main.c: 73: configPORTs();
   286  01B8  120A  118A  220B  120A  118A  	fcall	_configPORTs
   287                           
   288                           ;main.c: 75: PORTDbits.RD0 = 1;
   289  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   290  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   291  01BF  1408               	bsf	8,0	;volatile
   292                           
   293                           ;main.c: 76: PORTDbits.RD1 = 1;
   294  01C0  1488               	bsf	8,1	;volatile
   295                           
   296                           ;main.c: 77: PORTBbits.RB2 = 1;
   297  01C1  1506               	bsf	6,2	;volatile
   298  01C2                     l52:	
   299                           ;main.c: 79: do{
   300                           
   301                           
   302                           ;main.c: 80: blinkLed();
   303  01C2  120A  118A  21C8  120A  118A  	fcall	_blinkLed
   304                           
   305                           ;main.c: 81: } while(1);
   306  01C7  29C2               	goto	l52
   307  01C8                     __end_of_main:	
   308                           
   309                           	psect	text1
   310  0214                     __ptext1:	
   311 ;; *************** function _enableInterrupt *****************
   312 ;; Defined at:
   313 ;;		line 99 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		None
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; Hardware stack levels required when called:    2
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _enableInterrupt
   343  0214                     _enableInterrupt:	
   344                           
   345                           ;main.c: 100: INTCONbits.GIE = 1;
   346                           
   347                           ;incstack = 0
   348                           ; Regs used in _enableInterrupt: []
   349  0214  178B               	bsf	11,7	;volatile
   350                           
   351                           ;main.c: 101: INTCONbits.PEIE = 1;
   352  0215  170B               	bsf	11,6	;volatile
   353                           
   354                           ;main.c: 102: PIE1bits.RCIE = 1;
   355  0216  1683               	bsf	3,5	;RP0=1, select bank1
   356  0217  1303               	bcf	3,6	;RP1=0, select bank1
   357  0218  168C               	bsf	12,5	;volatile
   358  0219  0008               	return
   359  021A                     __end_of_enableInterrupt:	
   360                           
   361                           	psect	text2
   362  0200                     __ptext2:	
   363 ;; *************** function _configUSART *****************
   364 ;; Defined at:
   365 ;;		line 93 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    2
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _configUSART
   395  0200                     _configUSART:	
   396                           
   397                           ;main.c: 94: TXSTA = 0x20;
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _configUSART: [wreg]
   401  0200  3020               	movlw	32
   402  0201  1683               	bsf	3,5	;RP0=1, select bank1
   403  0202  1303               	bcf	3,6	;RP1=0, select bank1
   404  0203  0098               	movwf	24	;volatile
   405                           
   406                           ;main.c: 95: SPBRG = 25;
   407  0204  3019               	movlw	25
   408  0205  0099               	movwf	25	;volatile
   409                           
   410                           ;main.c: 96: RCSTA = 0x90;
   411  0206  3090               	movlw	144
   412  0207  1283               	bcf	3,5	;RP0=0, select bank0
   413  0208  1303               	bcf	3,6	;RP1=0, select bank0
   414  0209  0098               	movwf	24	;volatile
   415  020A  0008               	return
   416  020B                     __end_of_configUSART:	
   417                           
   418                           	psect	text3
   419  020B                     __ptext3:	
   420 ;; *************** function _configPORTs *****************
   421 ;; Defined at:
   422 ;;		line 105 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    2
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function _configPORTs
   452  020B                     _configPORTs:	
   453                           
   454                           ;main.c: 106: ANSEL = 0x00;
   455                           
   456                           ;incstack = 0
   457                           ; Regs used in _configPORTs: [status,2]
   458  020B  1683               	bsf	3,5	;RP0=1, select bank3
   459  020C  1703               	bsf	3,6	;RP1=1, select bank3
   460  020D  0188               	clrf	8	;volatile
   461                           
   462                           ;main.c: 107: ANSELH = 0x00;
   463  020E  0189               	clrf	9	;volatile
   464                           
   465                           ;main.c: 108: TRISD = 0x00;
   466  020F  1683               	bsf	3,5	;RP0=1, select bank1
   467  0210  1303               	bcf	3,6	;RP1=0, select bank1
   468  0211  0188               	clrf	8	;volatile
   469                           
   470                           ;main.c: 109: TRISB = 0x00;
   471  0212  0186               	clrf	6	;volatile
   472  0213  0008               	return
   473  0214                     __end_of_configPORTs:	
   474                           
   475                           	psect	text4
   476  01C8                     __ptext4:	
   477 ;; *************** function _blinkLed *****************
   478 ;; Defined at:
   479 ;;		line 115 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    3
   500 ;; This function calls:
   501 ;;		_delay
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _blinkLed
   509  01C8                     _blinkLed:	
   510                           
   511                           ;main.c: 116: PORTBbits.RB2 = ~PORTBbits.RB2;
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _blinkLed: [wreg+status,2+status,0+pclath+cstack]
   515  01C8  1003               	clrc
   516  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   517  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   518  01CB  1D06               	btfss	6,2	;volatile
   519  01CC  1403               	setc
   520  01CD  1C03               	btfss	3,0
   521  01CE  29D3               	goto	u270
   522  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   523  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   524  01D1  1506               	bsf	6,2	;volatile
   525  01D2  29D6               	goto	l639
   526  01D3                     u270:	
   527  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   528  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   529  01D5  1106               	bcf	6,2	;volatile
   530  01D6                     l639:	
   531                           
   532                           ;main.c: 117: delay(4000000);
   533  01D6  3000               	movlw	0
   534  01D7  00A3               	movwf	delay@time+3
   535  01D8  303D               	movlw	61
   536  01D9  00A2               	movwf	delay@time+2
   537  01DA  3009               	movlw	9
   538  01DB  00A1               	movwf	delay@time+1
   539  01DC  3000               	movlw	0
   540  01DD  00A0               	movwf	delay@time
   541  01DE  120A  118A  210D   	fcall	_delay
   542  01E1  0008               	return
   543  01E2                     __end_of_blinkLed:	
   544                           
   545                           	psect	text5
   546  010D                     __ptext5:	
   547 ;; *************** function _delay *****************
   548 ;; Defined at:
   549 ;;		line 85 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  time            4    0[BANK0 ] unsigned long 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  k               4   12[BANK0 ] unsigned long 
   554 ;;  j               4    8[BANK0 ] unsigned long 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       4       0       0       0
   565 ;;      Locals:         0       8       0       0       0
   566 ;;      Temps:          0       4       0       0       0
   567 ;;      Totals:         0      16       0       0       0
   568 ;;Total ram usage:       16 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_blinkLed
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _delay
   580  010D                     _delay:	
   581                           
   582                           ;main.c: 86: for(unsigned long j=time; j>0; j--){
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _delay: [wreg+status,2+status,0]
   586  010D  1283               	bcf	3,5	;RP0=0, select bank0
   587  010E  1303               	bcf	3,6	;RP1=0, select bank0
   588  010F  0823               	movf	delay@time+3,w
   589  0110  00AB               	movwf	delay@j+3
   590  0111  0822               	movf	delay@time+2,w
   591  0112  00AA               	movwf	delay@j+2
   592  0113  0821               	movf	delay@time+1,w
   593  0114  00A9               	movwf	delay@j+1
   594  0115  0820               	movf	delay@time,w
   595  0116  00A8               	movwf	delay@j
   596  0117                     L1:	
   597  0117  082B               	movf	delay@j+3,w
   598  0118  042A               	iorwf	delay@j+2,w
   599  0119  0429               	iorwf	delay@j+1,w
   600  011A  0428               	iorwf	delay@j,w
   601  011B  1903               	btfsc	3,2
   602  011C  0008               	return
   603                           
   604                           ;main.c: 87: for(unsigned long k=time/4; k>0; k--){
   605  011D  0820               	movf	delay@time,w
   606  011E  00A4               	movwf	??_delay
   607  011F  0821               	movf	delay@time+1,w
   608  0120  00A5               	movwf	??_delay+1
   609  0121  0822               	movf	delay@time+2,w
   610  0122  00A6               	movwf	??_delay+2
   611  0123  0823               	movf	delay@time+3,w
   612  0124  00A7               	movwf	??_delay+3
   613  0125  3002               	movlw	2
   614  0126                     u195:	
   615  0126  1003               	clrc
   616  0127  0CA7               	rrf	??_delay+3,f
   617  0128  0CA6               	rrf	??_delay+2,f
   618  0129  0CA5               	rrf	??_delay+1,f
   619  012A  0CA4               	rrf	??_delay,f
   620  012B  3EFF               	addlw	-1
   621  012C  1D03               	skipz
   622  012D  2926               	goto	u195
   623  012E  0827               	movf	??_delay+3,w
   624  012F  00AF               	movwf	delay@k+3
   625  0130  0826               	movf	??_delay+2,w
   626  0131  00AE               	movwf	delay@k+2
   627  0132  0825               	movf	??_delay+1,w
   628  0133  00AD               	movwf	delay@k+1
   629  0134  0824               	movf	??_delay,w
   630  0135  00AC               	movwf	delay@k
   631  0136  082F               	movf	delay@k+3,w
   632  0137  042E               	iorwf	delay@k+2,w
   633  0138  042D               	iorwf	delay@k+1,w
   634  0139  042C               	iorwf	delay@k,w
   635  013A  1903               	btfsc	3,2
   636  013B  295E               	goto	l613
   637  013C                     l611:	
   638  013C  3001               	movlw	1
   639  013D  00A4               	movwf	??_delay
   640  013E  3000               	movlw	0
   641  013F  00A5               	movwf	??_delay+1
   642  0140  3000               	movlw	0
   643  0141  00A6               	movwf	??_delay+2
   644  0142  3000               	movlw	0
   645  0143  00A7               	movwf	??_delay+3
   646  0144  0824               	movf	??_delay,w
   647  0145  02AC               	subwf	delay@k,f
   648  0146  0825               	movf	??_delay+1,w
   649  0147  1C03               	skipc
   650  0148  0F25               	incfsz	??_delay+1,w
   651  0149  294B               	goto	u215
   652  014A  294C               	goto	u216
   653  014B                     u215:	
   654  014B  02AD               	subwf	delay@k+1,f
   655  014C                     u216:	
   656  014C  0826               	movf	??_delay+2,w
   657  014D  1C03               	skipc
   658  014E  0F26               	incfsz	??_delay+2,w
   659  014F  2951               	goto	u217
   660  0150  2952               	goto	u218
   661  0151                     u217:	
   662  0151  02AE               	subwf	delay@k+2,f
   663  0152                     u218:	
   664  0152  0827               	movf	??_delay+3,w
   665  0153  1C03               	skipc
   666  0154  0F27               	incfsz	??_delay+3,w
   667  0155  2957               	goto	u219
   668  0156  2958               	goto	u210
   669  0157                     u219:	
   670  0157  02AF               	subwf	delay@k+3,f
   671  0158                     u210:	
   672  0158  082F               	movf	delay@k+3,w
   673  0159  042E               	iorwf	delay@k+2,w
   674  015A  042D               	iorwf	delay@k+1,w
   675  015B  042C               	iorwf	delay@k,w
   676  015C  1D03               	skipz
   677  015D  293C               	goto	l611
   678  015E                     l613:	
   679  015E  3001               	movlw	1
   680  015F  00A4               	movwf	??_delay
   681  0160  3000               	movlw	0
   682  0161  00A5               	movwf	??_delay+1
   683  0162  3000               	movlw	0
   684  0163  00A6               	movwf	??_delay+2
   685  0164  3000               	movlw	0
   686  0165  00A7               	movwf	??_delay+3
   687  0166  0824               	movf	??_delay,w
   688  0167  02A8               	subwf	delay@j,f
   689  0168  0825               	movf	??_delay+1,w
   690  0169  1C03               	skipc
   691  016A  0F25               	incfsz	??_delay+1,w
   692  016B  296D               	goto	u235
   693  016C  296E               	goto	u236
   694  016D                     u235:	
   695  016D  02A9               	subwf	delay@j+1,f
   696  016E                     u236:	
   697  016E  0826               	movf	??_delay+2,w
   698  016F  1C03               	skipc
   699  0170  0F26               	incfsz	??_delay+2,w
   700  0171  2973               	goto	u237
   701  0172  2974               	goto	u238
   702  0173                     u237:	
   703  0173  02AA               	subwf	delay@j+2,f
   704  0174                     u238:	
   705  0174  0827               	movf	??_delay+3,w
   706  0175  1C03               	skipc
   707  0176  0F27               	incfsz	??_delay+3,w
   708  0177  2979               	goto	u239
   709  0178  2917               	goto	L1
   710  0179                     u239:	
   711  0179  02AB               	subwf	delay@j+3,f
   712  017A  2917               	goto	L1
   713  017B                     __end_of_delay:	
   714                           
   715                           	psect	text6
   716  017B                     __ptext6:	
   717 ;; *************** function _USART_ISR *****************
   718 ;; Defined at:
   719 ;;		line 59 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  i               1    5[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          5       0       0       0       0
   736 ;;      Totals:         6       0       0       0       0
   737 ;;Total ram usage:        6 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    1
   740 ;; This function calls:
   741 ;;		_toggleGreenLed
   742 ;;		_toggleRedLed
   743 ;; This function is called by:
   744 ;;		Interrupt level 1
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _USART_ISR
   750  017B                     _USART_ISR:	
   751                           
   752                           ;main.c: 60: if(RCIF){
   753  017B  1E8C               	btfss	12,5	;volatile
   754  017C  29A1               	goto	i1l49
   755                           
   756                           ;main.c: 61: command = RCREG;
   757  017D  081A               	movf	26,w	;volatile
   758  017E  00F0               	movwf	??_USART_ISR
   759  017F  0870               	movf	??_USART_ISR,w
   760  0180  00FA               	movwf	_command
   761                           
   762                           ;main.c: 62: for(unsigned char i=0; i<2; i++){
   763  0181  01F5               	clrf	USART_ISR@i
   764  0182  3002               	movlw	2
   765  0183  0275               	subwf	USART_ISR@i,w
   766  0184  1803               	btfsc	3,0
   767  0185  29A1               	goto	i1l49
   768  0186                     i1l581:	
   769                           
   770                           ;main.c: 63: if(command == ledControl[i].cmd)
   771  0186  0875               	movf	USART_ISR@i,w
   772  0187  00F0               	movwf	??_USART_ISR
   773  0188  0770               	addwf	??_USART_ISR,w
   774  0189  3E76               	addlw	(low (_ledControl| 0))& (0+255)
   775  018A  0084               	movwf	4
   776  018B  0800               	movf	0,w
   777  018C  067A               	xorwf	_command,w
   778  018D  1D03               	skipz
   779  018E  2999               	goto	i1l585
   780                           
   781                           ;main.c: 64: ledControl[i].toggle();
   782  018F  1403               	setc
   783  0190  0D75               	rlf	USART_ISR@i,w
   784  0191  3E76               	addlw	(low (_ledControl| 0))& (0+255)
   785  0192  0084               	movwf	4
   786  0193  0800               	movf	0,w
   787  0194  120A  118A  2101  120A  118A  	fcall	i1fptable
   788  0199                     i1l585:	
   789  0199  3001               	movlw	1
   790  019A  00F0               	movwf	??_USART_ISR
   791  019B  0870               	movf	??_USART_ISR,w
   792  019C  07F5               	addwf	USART_ISR@i,f
   793  019D  3002               	movlw	2
   794  019E  0275               	subwf	USART_ISR@i,w
   795  019F  1C03               	skipc
   796  01A0  2986               	goto	i1l581
   797  01A1                     i1l49:	
   798  01A1  0874               	movf	??_USART_ISR+4,w
   799  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   800  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   801  01A4  00FF               	movwf	127
   802  01A5  0873               	movf	??_USART_ISR+3,w
   803  01A6  008A               	movwf	10
   804  01A7  0872               	movf	??_USART_ISR+2,w
   805  01A8  0084               	movwf	4
   806  01A9  0E71               	swapf	(??_USART_ISR+1)^(0+-128),w
   807  01AA  0083               	movwf	3
   808  01AB  0EFE               	swapf	126,f
   809  01AC  0E7E               	swapf	126,w
   810  01AD  0009               	retfie
   811  01AE                     __end_of_USART_ISR:	
   812                           
   813                           	psect	intentry
   814  0004                     __pintentry:	
   815                           ;incstack = 0
   816                           ; Regs used in _USART_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   817                           
   818  0004                     interrupt_function:	
   819  007E                     saved_w	set	btemp
   820  0004  00FE               	movwf	btemp
   821  0005  0E03               	swapf	3,w
   822  0006  00F1               	movwf	??_USART_ISR+1
   823  0007  0804               	movf	4,w
   824  0008  00F2               	movwf	??_USART_ISR+2
   825  0009  080A               	movf	10,w
   826  000A  00F3               	movwf	??_USART_ISR+3
   827  000B  1283               	bcf	3,5	;RP0=0, select bank0
   828  000C  1303               	bcf	3,6	;RP1=0, select bank0
   829  000D  087F               	movf	btemp+1,w
   830  000E  00F4               	movwf	??_USART_ISR+4
   831  000F  120A  118A  297B   	ljmp	_USART_ISR
   832                           
   833                           	psect	text7
   834  01E2                     __ptext7:	
   835 ;; *************** function _toggleGreenLed *****************
   836 ;; Defined at:
   837 ;;		line 112 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		status,0
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_USART_ISR
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _toggleGreenLed
   866  01E2                     _toggleGreenLed:	
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _toggleGreenLed: [status,0]
   870  01E2  1003               	clrc
   871  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   872  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   873  01E5  1C08               	btfss	8,0	;volatile
   874  01E6  1403               	setc
   875  01E7  1C03               	btfss	3,0
   876  01E8  29ED               	goto	u10_20
   877  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   878  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   879  01EB  1408               	bsf	8,0	;volatile
   880  01EC  0008               	return
   881  01ED                     u10_20:	
   882  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   883  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   884  01EF  1008               	bcf	8,0	;volatile
   885  01F0  0008               	return
   886  01F1                     __end_of_toggleGreenLed:	
   887                           
   888                           	psect	text8
   889  01F1                     __ptext8:	
   890 ;; *************** function _toggleRedLed *****************
   891 ;; Defined at:
   892 ;;		line 113 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_USART_ISR
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _toggleRedLed
   921  01F1                     _toggleRedLed:	
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _toggleRedLed: [status,0]
   925  01F1  1003               	clrc
   926  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   927  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   928  01F4  1C88               	btfss	8,1	;volatile
   929  01F5  1403               	setc
   930  01F6  1C03               	btfss	3,0
   931  01F7  29FC               	goto	u12_20
   932  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   933  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   934  01FA  1488               	bsf	8,1	;volatile
   935  01FB  0008               	return
   936  01FC                     u12_20:	
   937  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   938  01FD  1303               	bcf	3,6	;RP1=0, select bank0
   939  01FE  1088               	bcf	8,1	;volatile
   940  01FF  0008               	return
   941  0200                     __end_of_toggleRedLed:	
   942  0004                     
   943                           	psect	functab
   944  0100                     __pfunctab:	
   945  0100                     fptable:	
   946  0100  2900               	goto	fptable	;no entries
   947  0101                     __i1fptable:	
   948  0101                     i1fptable:	
   949  0101  00FF               	movwf	(btemp+1)& (0+127)
   950  0102  3001               	movlw	high i1fptable
   951  0103  008A               	movwf	10
   952  0104  087F               	movf	(btemp+1)& (0+127),w
   953  0105  0782               	addwf	2,f
   954  0106                     i1fpbase:	
   955  0106  2906               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
   956  0107                     fp__toggleRedLed:	
   957  0107  120A  118A  29F1   	ljmp	_toggleRedLed
   958  010A                     fp__toggleGreenLed:	
   959  010A  120A  118A  29E2   	ljmp	_toggleGreenLed
   960  010D                     __end_of__i1fptable:	
   961  007E                     btemp	set	126	;btemp
   962  007E                     wtemp	set	126
   963  007E                     wtemp0	set	126
   964  0080                     wtemp1	set	128
   965  0082                     wtemp2	set	130
   966  0084                     wtemp3	set	132
   967  0086                     wtemp4	set	134
   968  0088                     wtemp5	set	136
   969  007F                     wtemp6	set	127
   970  007E                     ttemp	set	126
   971  007E                     ttemp0	set	126
   972  0081                     ttemp1	set	129
   973  0084                     ttemp2	set	132
   974  0087                     ttemp3	set	135
   975  007F                     ttemp4	set	127
   976  007E                     ltemp	set	126
   977  007E                     ltemp0	set	126
   978  0082                     ltemp1	set	130
   979  0086                     ltemp2	set	134
   980  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S20$toggle	PTR FTN()void  size(1) Largest target is 1
		 -> toggleRedLed(), toggleGreenLed(), 

    ledControl.toggle	PTR FTN()void  size(1) Largest target is 1
		 -> toggleRedLed(), toggleGreenLed(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _USART_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _blinkLed->_delay

Critical Paths under _USART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _USART_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _USART_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _USART_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     200
                           _blinkLed
                        _configPORTs
                        _configUSART
                    _enableInterrupt
 ---------------------------------------------------------------------------------
 (1) _enableInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPORTs                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blinkLed                                             0     0      0     200
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                               16    12      4     200
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _USART_ISR                                            6     6      0      60
                                              0 COMMON     6     6      0
                     _toggleGreenLed *
                       _toggleRedLed *
 ---------------------------------------------------------------------------------
 (4) _toggleRedLed                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _toggleGreenLed                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blinkLed
     _delay
   _configPORTs
   _configUSART
   _enableInterrupt

 _USART_ISR (ROOT)
   _toggleGreenLed *
   _toggleRedLed *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Oct 19 02:00:17 2022

                       pc 0002               __CFG_CP$OFF 0000                        l52 01C2  
             __CFG_LVP$ON 0000                       l611 013C                       l613 015E  
                     l639 01D6                       u210 0158                       u215 014B  
                     u216 014C                       u217 0151                       u218 0152  
                     u235 016D                       u219 0157                       u236 016E  
                     u237 0173                       u238 0174                       u270 01D3  
                     u239 0179              __CFG_CPD$OFF 0000                       u195 0126  
                     fsr0 0004                       indf 0000           ?_toggleGreenLed 0070  
            __CFG_IESO$ON 0000                      _RCIF 0065                      i1l49 01A1  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 01AE  
                    btemp 007E             __CFG_BOREN$ON 0000                      ltemp 007E  
         _enableInterrupt 0214                      start 0012                      ttemp 007E  
                    wtemp 007E                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l581 0186                     i1l585 0199  
                   _RCREG 001A                     u10_20 01ED                     _RCSTA 0018  
                   u12_20 01FC                     _SPBRG 0099                     _TRISB 0086  
                   _TRISD 0088                     _TXSTA 0098                     _delay 010D  
                   fpbase 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
      __size_of_USART_ISR 0033                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F            __CFG_MCLRE$OFF 0000  
         __initialization 0015              __end_of_main 01C8                    ??_main 0030  
                  ?_delay 0020   __end_of_enableInterrupt 021A                    _ANSELH 0189  
              __i1fptable 0101          __end_of_blinkLed 01E2            __CFG_PWRTE$OFF 0000  
    __size_of_configPORTs 0009      __size_of_configUSART 000B                    delay@j 0028  
                  delay@k 002C         __end_of_USART_ISR 01AE                    fptable 0100  
            __pdataCOMMON 0076                    fptotal 0000                    saved_w 007E  
 __end_of__initialization 002C            __pcstackCOMMON 0070             __end_of_delay 017B  
        ??_toggleGreenLed 0070                   ??_delay 0024          ?_enableInterrupt 0070  
              __pmaintext 01AE                __pintentry 0004                _ledControl 0076  
               ?_blinkLed 0070                   i1fpbase 0106                   __ptext1 0214  
                 __ptext2 0200                   __ptext3 020B                   __ptext4 01C8  
                 __ptext5 010D                   __ptext6 017B                   __ptext7 01E2  
                 __ptext8 01F1                   _command 007A       __size_of__i1fptable 000C  
         fp__toggleRedLed 0107                ??_blinkLed 0030      end_of_initialization 002C  
               _PORTBbits 0006                 _PORTDbits 0008                 _USART_ISR 017B  
           ?_toggleRedLed 0070             ??_configPORTs 0020             ??_configUSART 0020  
           __pidataCOMMON 021A       start_initialization 0015                ?_USART_ISR 0070  
          ??_toggleRedLed 0070       __end_of_configPORTs 0214       __end_of_configUSART 020B  
      __end_of__i1fptable 010D               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of_blinkLed 001A  __size_of_enableInterrupt 0006  
               __pfunctab 0100    __CFG_FOSC$EXTRC_CLKOUT 0000               ??_USART_ISR 0070  
          __size_of_delay 006E   __size_of_toggleGreenLed 000F         fp__toggleGreenLed 010A  
               delay@time 0020         interrupt_function 0004               _configPORTs 020B  
             _configUSART 0200                  _PIE1bits 008C      __end_of_toggleRedLed 0200  
              USART_ISR@i 0075                  i1fptable 0101                  i1fptotal 0004  
       ??_enableInterrupt 0020                  _blinkLed 01C8         __CFG_BOR4V$BOR21V 0000  
           __size_of_main 001A                _INTCONbits 000B            _toggleGreenLed 01E2  
                intlevel1 0100     __size_of_toggleRedLed 000F    __end_of_toggleGreenLed 01F1  
            _toggleRedLed 01F1              ?_configPORTs 0070              ?_configUSART 0070  
