

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Sep 23 23:28:57 2022

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F873A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  010F                     	;# 
    69  018C                     	;# 
    70  018D                     	;# 
    71  000B                     _INTCONbits	set	11
    72  0006                     _PORTB	set	6
    73  0006                     _PORTBbits	set	6
    74  0001                     _TMR0	set	1
    75  009C                     _CMCON	set	156
    76  0081                     _OPTION_REG	set	129
    77  0086                     _TRISB	set	134
    78                           
    79                           ; #config settings
    80  0000                     
    81                           	psect	cinit
    82  0013                     start_initialization:	
    83  0013                     __initialization:	
    84                           
    85                           ; Clear objects allocated to BANK0
    86  0013  01A4               	clrf	__pbssBANK0& (0+127)
    87  0014  01A5               	clrf	(__pbssBANK0+1)& (0+127)
    88  0015                     end_of_initialization:	
    89                           ;End of C runtime variable initialization code
    90                           
    91  0015                     __end_of__initialization:	
    92  0015  0183               	clrf	3
    93  0016  118A  283F         	ljmp	_main	;jump to C main() function
    94                           
    95                           	psect	bssBANK0
    96  0024                     __pbssBANK0:	
    97  0024                     _counter:	
    98  0024                     	ds	2
    99                           
   100                           	psect	cstackCOMMON
   101  0000                     __pcstackCOMMON:	
   102  0000                     ??_initialize:	
   103  0000                     ??_interrupt_init:	
   104                           ; 1 bytes @ 0x0
   105                           
   106  0000                     ??_blink_leds:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0000                     ??_main:	
   110                           ; 1 bytes @ 0x0
   111                           
   112                           
   113                           	psect	cstackBANK0
   114  0020                     __pcstackBANK0:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  0020                     ?_initialize:	
   118  0020                     ?_interrupt_init:	
   119                           ; 1 bytes @ 0x0
   120                           
   121  0020                     ?_blink_leds:	
   122                           ; 1 bytes @ 0x0
   123                           
   124  0020                     ?_toggle_ISR:	
   125                           ; 1 bytes @ 0x0
   126                           
   127  0020                     ??_toggle_ISR:	
   128                           ; 1 bytes @ 0x0
   129                           
   130  0020                     ?_main:	
   131                           ; 1 bytes @ 0x0
   132                           
   133                           
   134                           ; 1 bytes @ 0x0
   135  0020                     	ds	4
   136                           
   137                           	psect	maintext
   138  003F                     __pmaintext:	
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 33 in file "main.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		wreg, status,2, status,0, pclath, cstack
   153 ;; Tracked objects:
   154 ;;		On entry : B00/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMMON   BANK0   BANK1
   158 ;;      Params:         0       0       0
   159 ;;      Locals:         0       0       0
   160 ;;      Temps:          0       0       0
   161 ;;      Totals:         0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels required when called:    2
   164 ;; This function calls:
   165 ;;		_blink_leds
   166 ;;		_initialize
   167 ;;		_interrupt_init
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           
   174                           ;psect for function _main
   175  003F                     _main:	
   176                           
   177                           ;main.c: 35: initialize();
   178                           
   179                           ;incstack = 0
   180                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   181  003F  118A  2074  118A   	fcall	_initialize
   182                           
   183                           ;main.c: 36: interrupt_init();
   184  0042  118A  2069  118A   	fcall	_interrupt_init
   185  0045                     l567:	
   186                           ;main.c: 38: do {
   187                           
   188                           
   189                           ;main.c: 39: if(counter == 16){
   190  0045  3010               	movlw	16
   191  0046  1283               	bcf	3,5	;RP0=0, select bank0
   192  0047  1303               	bcf	3,6	;RP1=0, select bank0
   193  0048  0624               	xorwf	_counter,w
   194  0049  0425               	iorwf	_counter+1,w
   195  004A  1D03               	btfss	3,2
   196  004B  2845               	goto	l567
   197                           
   198                           ;main.c: 40: blink_leds();
   199  004C  118A  2018  118A   	fcall	_blink_leds
   200                           
   201                           ;main.c: 41: counter = 0;
   202  004F  1283               	bcf	3,5	;RP0=0, select bank0
   203  0050  1303               	bcf	3,6	;RP1=0, select bank0
   204  0051  01A4               	clrf	_counter
   205  0052  01A5               	clrf	_counter+1
   206                           
   207                           ;main.c: 42: }
   208                           ;main.c: 43: } while(1);
   209  0053  2845               	goto	l567
   210  0054                     __end_of_main:	
   211                           
   212                           	psect	text1
   213  0069                     __ptext1:	
   214 ;; *************** function _interrupt_init *****************
   215 ;; Defined at:
   216 ;;		line 58 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1
   230 ;;      Params:         0       0       0
   231 ;;      Locals:         0       0       0
   232 ;;      Temps:          0       0       0
   233 ;;      Totals:         0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels used:    1
   236 ;; Hardware stack levels required when called:    1
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		_main
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           
   245                           ;psect for function _interrupt_init
   246  0069                     _interrupt_init:	
   247                           
   248                           ;main.c: 59: OPTION_REG = 0x86;
   249                           
   250                           ;incstack = 0
   251                           ; Regs used in _interrupt_init: [wreg+status,2]
   252  0069  3086               	movlw	134
   253  006A  1683               	bsf	3,5	;RP0=1, select bank1
   254  006B  1303               	bcf	3,6	;RP1=0, select bank1
   255  006C  0081               	movwf	1	;volatile
   256                           
   257                           ;main.c: 67: INTCONbits.GIE = 0x01;
   258  006D  178B               	bsf	11,7	;volatile
   259                           
   260                           ;main.c: 68: INTCONbits.PEIE = 0x01;
   261  006E  170B               	bsf	11,6	;volatile
   262                           
   263                           ;main.c: 69: INTCONbits.T0IE = 0x01;
   264  006F  168B               	bsf	11,5	;volatile
   265                           
   266                           ;main.c: 71: TMR0 = 0x00;
   267  0070  1283               	bcf	3,5	;RP0=0, select bank0
   268  0071  1303               	bcf	3,6	;RP1=0, select bank0
   269  0072  0181               	clrf	1	;volatile
   270  0073  0008               	return
   271  0074                     __end_of_interrupt_init:	
   272                           
   273                           	psect	text2
   274  0074                     __ptext2:	
   275 ;; *************** function _initialize *****************
   276 ;; Defined at:
   277 ;;		line 46 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1
   291 ;;      Params:         0       0       0
   292 ;;      Locals:         0       0       0
   293 ;;      Temps:          0       0       0
   294 ;;      Totals:         0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used:    1
   297 ;; Hardware stack levels required when called:    1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_main
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           
   306                           ;psect for function _initialize
   307  0074                     _initialize:	
   308                           
   309                           ;main.c: 47: CMCON = 0x07;
   310                           
   311                           ;incstack = 0
   312                           ; Regs used in _initialize: [wreg+status,2]
   313  0074  3007               	movlw	7
   314  0075  1683               	bsf	3,5	;RP0=1, select bank1
   315  0076  1303               	bcf	3,6	;RP1=0, select bank1
   316  0077  009C               	movwf	28	;volatile
   317                           
   318                           ;main.c: 48: TRISB = 0x00;
   319  0078  0186               	clrf	6	;volatile
   320                           
   321                           ;main.c: 49: PORTB = 0x02;
   322  0079  3002               	movlw	2
   323  007A  1283               	bcf	3,5	;RP0=0, select bank0
   324  007B  1303               	bcf	3,6	;RP1=0, select bank0
   325  007C  0086               	movwf	6	;volatile
   326  007D  0008               	return
   327  007E                     __end_of_initialize:	
   328                           
   329                           	psect	text3
   330  0018                     __ptext3:	
   331 ;; *************** function _blink_leds *****************
   332 ;; Defined at:
   333 ;;		line 52 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		status,0
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1
   347 ;;      Params:         0       0       0
   348 ;;      Locals:         0       0       0
   349 ;;      Temps:          0       0       0
   350 ;;      Totals:         0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; Hardware stack levels required when called:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _blink_leds
   363  0018                     _blink_leds:	
   364                           
   365                           ;main.c: 53: PORTBbits.RB0 = ~PORTBbits.RB0;
   366                           
   367                           ;incstack = 0
   368                           ; Regs used in _blink_leds: [status,0]
   369  0018  1003               	clrc
   370  0019  1283               	bcf	3,5	;RP0=0, select bank0
   371  001A  1303               	bcf	3,6	;RP1=0, select bank0
   372  001B  1C06               	btfss	6,0	;volatile
   373  001C  1403               	setc
   374  001D  1C03               	btfss	3,0
   375  001E  2823               	goto	u100
   376  001F  1283               	bcf	3,5	;RP0=0, select bank0
   377  0020  1303               	bcf	3,6	;RP1=0, select bank0
   378  0021  1406               	bsf	6,0	;volatile
   379  0022  2826               	goto	u114
   380  0023                     u100:	
   381  0023  1283               	bcf	3,5	;RP0=0, select bank0
   382  0024  1303               	bcf	3,6	;RP1=0, select bank0
   383  0025  1006               	bcf	6,0	;volatile
   384  0026                     u114:	
   385                           
   386                           ;main.c: 54: PORTBbits.RB1 = ~PORTBbits.RB1;
   387  0026  1003               	clrc
   388  0027  1C86               	btfss	6,1	;volatile
   389  0028  1403               	setc
   390  0029  1C03               	btfss	3,0
   391  002A  282F               	goto	u120
   392  002B  1283               	bcf	3,5	;RP0=0, select bank0
   393  002C  1303               	bcf	3,6	;RP1=0, select bank0
   394  002D  1486               	bsf	6,1	;volatile
   395  002E  2832               	goto	u134
   396  002F                     u120:	
   397  002F  1283               	bcf	3,5	;RP0=0, select bank0
   398  0030  1303               	bcf	3,6	;RP1=0, select bank0
   399  0031  1086               	bcf	6,1	;volatile
   400  0032                     u134:	
   401                           
   402                           ;main.c: 55: PORTBbits.RB2 = ~PORTBbits.RB2;
   403  0032  1003               	clrc
   404  0033  1D06               	btfss	6,2	;volatile
   405  0034  1403               	setc
   406  0035  1C03               	btfss	3,0
   407  0036  283B               	goto	u140
   408  0037  1283               	bcf	3,5	;RP0=0, select bank0
   409  0038  1303               	bcf	3,6	;RP1=0, select bank0
   410  0039  1506               	bsf	6,2	;volatile
   411  003A  0008               	return
   412  003B                     u140:	
   413  003B  1283               	bcf	3,5	;RP0=0, select bank0
   414  003C  1303               	bcf	3,6	;RP1=0, select bank0
   415  003D  1106               	bcf	6,2	;volatile
   416  003E  0008               	return
   417  003F                     __end_of_blink_leds:	
   418                           
   419                           	psect	text4
   420  0054                     __ptext4:	
   421 ;; *************** function _toggle_ISR *****************
   422 ;; Defined at:
   423 ;;		line 26 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1
   437 ;;      Params:         0       0       0
   438 ;;      Locals:         0       0       0
   439 ;;      Temps:          0       4       0
   440 ;;      Totals:         0       4       0
   441 ;;Total ram usage:        4 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		Interrupt level 1
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function _toggle_ISR
   452  0054                     _toggle_ISR:	
   453                           
   454                           ;main.c: 27: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
   455  0054  1A8B               	btfsc	11,5	;volatile
   456  0055  1D0B               	btfss	11,2	;volatile
   457  0056  285E               	goto	i1l26
   458                           
   459                           ;main.c: 28: counter++;
   460  0057  3001               	movlw	1
   461  0058  07A4               	addwf	_counter,f
   462  0059  1803               	skipnc
   463  005A  0AA5               	incf	_counter+1,f
   464  005B  3000               	movlw	0
   465  005C  07A5               	addwf	_counter+1,f
   466                           
   467                           ;main.c: 29: INTCONbits.TMR0IF = 0x00;
   468  005D  110B               	bcf	11,2	;volatile
   469  005E                     i1l26:	
   470  005E  0823               	movf	??_toggle_ISR+3,w
   471  005F  00FF               	movwf	127
   472  0060  0822               	movf	??_toggle_ISR+2,w
   473  0061  008A               	movwf	10
   474  0062  0821               	movf	??_toggle_ISR+1,w
   475  0063  0084               	movwf	4
   476  0064  0E20               	swapf	??_toggle_ISR^0,w
   477  0065  0083               	movwf	3
   478  0066  0EFE               	swapf	126,f
   479  0067  0E7E               	swapf	126,w
   480  0068  0009               	retfie
   481  0069                     __end_of_toggle_ISR:	
   482  007E                     btemp	set	126	;btemp
   483  007E                     wtemp	set	126
   484  007E                     wtemp0	set	126
   485  0080                     wtemp1	set	128
   486  0082                     wtemp2	set	130
   487  0084                     wtemp3	set	132
   488  0086                     wtemp4	set	134
   489  0088                     wtemp5	set	136
   490  007F                     wtemp6	set	127
   491  007E                     ttemp	set	126
   492  007E                     ttemp0	set	126
   493  0081                     ttemp1	set	129
   494  0084                     ttemp2	set	132
   495  0087                     ttemp3	set	135
   496  007F                     ttemp4	set	127
   497  007E                     ltemp	set	126
   498  007E                     ltemp0	set	126
   499  0082                     ltemp1	set	130
   500  0086                     ltemp2	set	134
   501  0080                     ltemp3	set	128
   502                           
   503                           	psect	intentry
   504  0004                     __pintentry:	
   505                           ;incstack = 0
   506                           ; Regs used in _toggle_ISR: [wreg]
   507                           
   508  0004                     interrupt_function:	
   509  007E                     saved_w	set	btemp
   510  0004  00FE               	movwf	btemp
   511  0005  0E03               	swapf	3,w
   512  0006  1283               	bcf	3,5	;RP0=0, select bank0
   513  0007  1303               	bcf	3,6	;RP1=0, select bank0
   514  0008  00A0               	movwf	??_toggle_ISR
   515  0009  0804               	movf	4,w
   516  000A  00A1               	movwf	??_toggle_ISR+1
   517  000B  080A               	movf	10,w
   518  000C  00A2               	movwf	??_toggle_ISR+2
   519  000D  087F               	movf	btemp+1,w
   520  000E  00A3               	movwf	??_toggle_ISR+3
   521  000F  118A  2854         	ljmp	_toggle_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      4       6
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _toggle_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _toggle_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _toggle_ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _blink_leds
                         _initialize
                     _interrupt_init
 ---------------------------------------------------------------------------------
 (1) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink_leds                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _toggle_ISR                                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink_leds
   _initialize
   _interrupt_init

 _toggle_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      4       6       4        6.4%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       6       7        0.0%
DATA                 0      0       6       8        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Sep 23 23:28:57 2022

            __CFG_CP$OFF 0000   __end_of_interrupt_init 0074                      l567 0045  
                    u100 0023                      u120 002F                      u114 0026  
                    u140 003B                      u134 0032             __CFG_CPD$OFF 0000  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   i1l26 005E                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 003F                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0011                     ttemp 007E  
                   wtemp 007E                    ?_main 0020            __CFG_WDTE$OFF 0000  
                  _CMCON 009C          ?_interrupt_init 0020                    _PORTB 0006  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0013  
           __end_of_main 0054                   ??_main 0000                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0000               __pbssBANK0 0024  
             __pmaintext 003F         ??_interrupt_init 0000               __pintentry 0004  
             _blink_leds 0018               _initialize 0074                  __ptext1 0069  
                __ptext2 0074                  __ptext3 0018                  __ptext4 0054  
                _counter 0024     end_of_initialization 0015              ?_blink_leds 0020  
              _PORTBbits 0006               _toggle_ISR 0054              ?_initialize 0020  
    start_initialization 0013      __size_of_blink_leds 0027              ?_toggle_ISR 0020  
              ___latbits 0001            __pcstackBANK0 0020      __size_of_initialize 000A  
      interrupt_function 0004      __size_of_toggle_ISR 0015             ??_blink_leds 0000  
__size_of_interrupt_init 000B       __end_of_blink_leds 003F             ??_initialize 0000  
          __size_of_main 0015       __end_of_initialize 007E             ??_toggle_ISR 0020  
             _INTCONbits 000B                 intlevel1 0000       __end_of_toggle_ISR 0069  
             _OPTION_REG 0081           _interrupt_init 0069  
