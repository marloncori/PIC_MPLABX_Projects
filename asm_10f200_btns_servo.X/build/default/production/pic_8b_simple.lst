MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-23-2022  23:00:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ; Control servo with a button. 
                      00003 ;    Three buttons are used to lock and unlock the system.
                      00004 ;    
                      00005 ; source:
                      00006 ;  https://www.circuitbread.com/tutorials/servo-motor-indirect-addressing-and-electronic-lock---part-10-
                            microcontroller-basics-pic10f200    
                      00007 ;*******************************************************************************
                      00008     #include "p10f200.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC10F200 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00152         LIST
0FFF   0FEB           00009     __CONFIG _WDT_OFF & _CP_OFF & _MCLRE_OFF
                      00010 
                      00011 ;*******************************************************************************
                      00012 ; Constant and variables
                      00013 ;*******************************************************************************    
  0000005E            00014 code_value     EQU    b'01011110'  ;code 2 3 1 1
                      00015                                    ; 01 01 11 10
                      00016                                    ;  1  1  3  2
                      00017 ;------------------------------------------------------------------------------ 
  00000010            00018 i            EQU    10     ;Delay register 1
  00000011            00019 j            EQU    11     ;Delay register 2
  00000012            00020 lock_state   EQU    12     ;Lock state: 3 - closed, 2 - opened
  00000013            00021 count        EQU    13     ;Counter of the pressed buttons
  00000014            00022 code_reg     EQU    14     ;Register for code
  00000015            00023 servo_steps  EQU    15     ;Number of pulses for servo to change position
  00000016            00024 num1         EQU    16     ;First number register
                      00025 ;*******************************************************************************
                      00026 ; Reset Vector
                      00027 ;*******************************************************************************
                      00028 RES_VECT  CODE    0x0000            ; processor reset vector
0000   0A??           00029     GOTO    START                   ; go to beginning of program
                      00030 
                      00031 ;*******************************************************************************
                      00032 ; Start of program
                      00033 ;*******************************************************************************
                      00034 MAIN_PROG CODE
                      00035          
0000                  00036 START
0000   0C9F           00037     MOVLW ~((1<<T0CS)|(1<<NOT_GPPU))
0001   0002           00038     OPTION                 ;Enable GPIO2 and pull-ups
0002   0CFB           00039     MOVLW ~(1 << GP2)    
0003   0006           00040     TRIS GPIO              ;Set GP2 as output
0004   0C03           00041     MOVLW 3                
0005   0032           00042     MOVWF lock_state       ;Set lock state as "closed"
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-23-2022  23:00:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   0A??           00043     GOTO LOCK_CLOSE        ;and close the lock
                      00044     
                      00045 ;*******************************************************************************
                      00046 ; Main routine
                      00047 ;*******************************************************************************    
0007                  00048 LOOP
                      00049  
0007   09??           00050     CALL INIT_REGS         ;Initialize the registers values
                      00051 ;-------------------------------------------------------------------------------    
0008                  00052 READ_BUTTONS               ;Here the "read buttons" part starts
0008   09??           00053     CALL CHECK_BUTTONS   ;Read the buttons state
0009   0E03           00054     ANDLW 3                ;Clear all the bits of the result except two LSBs
000A   0643           00055     BTFSC STATUS, Z        ;If result is 0 (none of buttons were pressed)
000B   0A??           00056     GOTO READ_BUTTONS   ;then return to the READ_BUTTONS label
000C   0C28           00057     MOVLW D'40'            ;Otherwise load initial value for the delay
000D   09??           00058     CALL DELAY         ;and perform the debounce delay
000E   09??           00059     CALL CHECK_BUTTONS  ;Then check the buttons state again
000F   0E03           00060     ANDLW 3
0010   0643           00061     BTFSC STATUS, Z
0011   0A??           00062     GOTO READ_BUTTONS    ;If button is still pressed
0012   0020           00063     MOVWF INDF         ;Then save the button code in the INDF register
0013   09??           00064     CALL CHECK_BUTTONS   ;and keep checking the buttons state
0014   0E03           00065     ANDLW 3
0015   0743           00066     BTFSS STATUS, Z
0016   0A??           00067     GOTO $-3           ;until it becomes 0
0017   0C28           00068     MOVLW D'40'            ;Perform the debounce delay again
0018   09??           00069     CALL DELAY         
0019   0712           00070     BTFSS lock_state, 0            ;If the last bit of the lock_state is 0(lock is opened)
001A   0A??           00071     GOTO LOCK_CLOSE        ;then close the lock (with any button)
001B   02A4           00072     INCF FSR, F            ;otherwise increment the indirect address,
001C   02F3           00073     DECFSZ count, F        ;decrement the button press counter,check if it is 0
001D   0A??           00074     GOTO READ_BUTTONS    ;If it is not, then return to the READ_BUTTONS
                      00075  
001E   09??           00076     CALL INIT_REGS     ;otherwise initialize registers again
                      00077 ;-------------------------------------------------------------------------------    
001F                  00078 CHECK_CODE         ;and start checking the code
001F   0214           00079     MOVF code_reg, W             ;Copy the code value into the W
0020   0E03           00080     ANDLW 3                ;and clear all the bits of W except of the two LSBs
0021   0080           00081     SUBWF INDF, W                  ;Subtract W from the indirectly addressed register
0022   0743           00082     BTFSS STATUS, Z        ;If result is not 0 (code is not correct)
0023   0A??           00083     GOTO LOOP          ;then return to the LOOP label
0024   0334           00084     RRF code_reg, F                    ;otherwise shift the code register right
0025   0334           00085     RRF code_reg, F                    ;two times
0026   02A4           00086     INCF FSR, F            ;Increment the the indirect address
0027   02F3           00087     DECFSZ count, F        ;Decrement the counter and check if it is 0
0028   0A??           00088     GOTO CHECK_CODE        ;If it is not, then check the next code value
                      00089 ;------------------------------------------------------------------------------- 
0029                  00090 LOCK_OPEN          ;otherwise open the lock
0029   0412           00091     BCF lock_state, 0                ;Clear the LSB of the lock_state
002A   09??           00092     CALL MANIPULATE_SERVO;and manipulate the servo to open the lock
002B   0A??           00093     GOTO LOOP          ;Then return to the LOOP label
                      00094 ;------------------------------------------------------------------------------- 
002C                  00095 LOCK_CLOSE         ;Code part to close the lock
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-23-2022  23:00:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   0512           00096     BSF lock_state, 0                ;Set the LSB of the lock state
002D   09??           00097     CALL MANIPULATE_SERVO;and manipulate the servo to open the lock
002E   0A??           00098     GOTO LOOP          ;Then return to the LOOP label
                      00099  
                      00100 ;----------------Subroutines----------------------------------------
002F                  00101 INIT_REGS              ;Initialize the  registers
002F   0C16           00102     MOVLW num1         ;Copy the num1 register address to the
0030   0024           00103     MOVWF FSR          ;indirect address pointer
0031   0C04           00104     MOVLW 4                ;Set count as 4 wait for 4 buttons presses
0032   0033           00105     MOVWF count
0033   0C5E           00106     MOVLW code_value            ;Copy code_value
0034   0034           00107     MOVWF code_reg     ;into the code_reg register
0035   0800           00108     RETLW 0                ;Return from the subroutine
                      00109 ;------------------------------------------------------------------------------- 
0036                  00110 CHECK_BUTTONS
0036   0766           00111     BTFSS GPIO, GP3        ;Check if GP3 is 0 (SW1 is pressed)    
0037   0801           00112     RETLW 1                ;and return 1 (b'01')
0038   0706           00113     BTFSS GPIO, GP0        ;Check if GP0 is 0 (SW2 is pressed)    
0039   0802           00114     RETLW 2                ;and return 2 (b'10')
003A   0726           00115     BTFSS GPIO, GP1        ;Check if GP1 is 0 (SW3 is pressed)    
003B   0803           00116     RETLW 3                ;and return 3 (b'11')
003C   0800           00117     RETLW 0                ;If none of the buttons are pressed then return 0
                      00118 ;------------------------------------------------------------------------------- 
003D                  00119 DELAY              ;Start DELAY subroutine here    
003D   0030           00120     MOVWF i                ;Copy the W value to the register i
003E   0031           00121     MOVWF j                ;Copy the W value to the register j
003F                  00122 DELAY_LOOP         ;Start delay loop
003F   02F0           00123     DECFSZ i, F            ;Decrement i and check if it is not zero
0040   0A??           00124     GOTO DELAY_LOOP        ;If not, then go to the DELAY_LOOP label
0041   02F1           00125     DECFSZ j, F            ;Decrement j and check if it is not zero
0042   0A??           00126     GOTO DELAY_LOOP        ;If not, then go to the DELAY_LOOP label
0043   0800           00127     RETLW 0                ;Else return from the subroutine
                      00128 ;------------------------------------------------------------------------------- 
0044                  00129 MANIPULATE_SERVO       ;Manipulate servo subroutine
0044   0C14           00130     MOVLW D'20'            ;Copy 20 to the servo_steps register
0045   0035           00131     MOVWF servo_steps          ;to repeat the servo move condition 20 times
0046                  00132 SERVO_MOVE            ;Here servo move condition starts
0046   0546           00133     BSF GPIO, GP2                  ;Set the GP2 pin to apply voltage to the servo
0047   0212           00134     MOVF lock_state, W            ;Load initial value for the delay
0048   09??           00135     CALL DELAY         ;(2 to open the lock, 3 to close it)
0049   0446           00136     BCF GPIO, GP2                  ;Reset GP2 pin to remove voltage from the servo
004A   0C19           00137     MOVLW D'25'            ;Load initial value for the delay
004B   09??           00138     CALL DELAY         ;(normal delay of about 20 ms)
004C   02F5           00139     DECFSZ servo_steps, F     ;Decrease the servo steps counter, check if it is 0
004D   0A??           00140     GOTO SERVO_MOVE        ;If not, keep moving servo
004E   0800           00141     RETLW 0                ;otherwise return from the subroutine
                      00142     
                      00143 ;*******************************************************************************
                      00144 ;  end of program
                      00145 ;******************************************************************************* 
0FEB                  00146     END
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-23-2022  23:00:13         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
CAL0                              00000001
CAL1                              00000002
CAL2                              00000003
CAL3                              00000004
CAL4                              00000005
CAL5                              00000006
CAL6                              00000007
CHECK_BUTTONS                     00000036
CHECK_CODE                        0000001F
DC                                00000001
DELAY                             0000003D
DELAY_LOOP                        0000003F
F                                 00000001
FOSC4                             00000000
FSR                               00000004
GP0                               00000000
GP1                               00000001
GP2                               00000002
GP3                               00000003
GPIO                              00000006
GPWUF                             00000007
INDF                              00000000
INIT_REGS                         0000002F
LOCK_CLOSE                        0000002C
LOCK_OPEN                         00000029
LOOP                              00000007
MANIPULATE_SERVO                  00000044
NOT_GPPU                          00000006
NOT_GPWU                          00000007
NOT_PD                            00000003
NOT_TO                            00000004
OSCCAL                            00000005
PCL                               00000002
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
READ_BUTTONS                      00000008
SERVO_MOVE                        00000046
START                             00000000
STATUS                            00000003
T0CS                              00000005
T0SE                              00000004
TMR0                              00000001
TRISIO0                           00000000
TRISIO1                           00000001
TRISIO2                           00000002
TRISIO3                           00000003
W                                 00000000
Z                                 00000002
_CONFIG                           00000FFF
_CP_OFF                           00000FFF
MPASM 5.75                 PIC_8B_SIMPLE.ASM   10-23-2022  23:00:13         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

_CP_ON                            00000FF7
_IDLOC0                           00000100
_IDLOC1                           00000101
_IDLOC2                           00000102
_IDLOC3                           00000103
_IntRC_OSC                        00000FFF
_MAIN_PROG_0016                   00000016
_MCLRE_OFF                        00000FEF
_MCLRE_ON                         00000FFF
_OSC_IntRC                        00000FFF
_WDTE_OFF                         00000FFB
_WDTE_ON                          00000FFF
_WDT_OFF                          00000FFB
_WDT_ON                           00000FFF
__10F200                          00000001
code_reg                          00000014
code_value                        0000005E
count                             00000013
i                                 00000010
j                                 00000011
lock_state                        00000012
num1                              00000016
servo_steps                       00000015

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

